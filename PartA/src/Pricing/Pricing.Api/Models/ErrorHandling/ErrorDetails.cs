namespace Pricing.Api.Models.ErrorHandling;

/// <summary>
/// Represents the detailed error information to be returned in a standardized
/// problem details response, conforming to RFC 7807 standards. This class
/// provides a consistent structure for conveying error types, titles, status
/// codes, and additional details.
/// </summary>
public sealed class ErrorDetails
{
    /// <summary>
    /// A URI reference that identifies the problem type.
    /// </summary>
    public string Type { get; set; } = string.Empty;

    /// <summary>
    /// A short, human-readable summary of the problem type.
    /// </summary>
    public string Title { get; set; } = string.Empty;

    /// <summary>
    /// The HTTP status code generated by the origin server for this occurrence of the problem.
    /// </summary>
    public int Status { get; set; }

    /// <summary>
    /// A human-readable explanation specific to this occurrence of the problem.
    /// </summary>
    public string Detail { get; set; } = string.Empty;

    /// <summary>
    /// A URI reference that identifies the specific occurrence of the problem.
    /// </summary>
    public string Instance { get; set; } = string.Empty;

    /// <summary>
    /// The unique trace ID for the request, used for logging and debugging.
    /// </summary>
    public string TraceId { get; set; } = string.Empty;

    /// <summary>
    /// A dictionary to hold additional problem details.
    /// </summary>
    public Dictionary<string, object> Extensions { get; set; } = new();

    /// <summary>
    /// A list of validation errors, typically used for bad request responses.
    /// </summary>
    public List<ValidationError> ValidationErrors { get; set; } = new();
}
