@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(user, "User", "Ops/Quality/Safety user")
System_Boundary(sds, "SDS Ingestion & Search System") {
  Container(upload_api, "Upload API", "Go/Java/Node", "Streams uploads (â‰¤25MB) to NFS; idempotency; emits Kafka events; RBAC/OIDC")
  Container(metadata, "Metadata Service", "Go/Java/.NET", "Validates, versions, stores metadata in Postgres; exposes Search API; outbox -> Kafka")
  Container(ocr, "OCR/ML Service", "Python", "Extracts text/entities from PDFs")
  Container(config, "Configuration Service", "Any", "Per-tenant retention N and feature flags")
  Container(retention, "Retention Service", "Any", "Enforces keep-last-N; triggers Archive")
  Container(archive, "Archive Service", "Any", "Moves files to archive namespace; marks archived in Postgres")
  Container(indexer, "Indexer", "Any", "Consumes MetadataCommitted; updates OpenSearch")
  ContainerDb(pg, "Postgres", "RDBMS", "Metadata, versioning, RBAC")
  ContainerDb(os, "OpenSearch", "Search", "Secondary index for fast queries")
  ContainerDb(redis, "Redis", "KV Store", "Idempotency keys; rate limits")
  ContainerDb(nfs, "NFS", "File storage", "PDF binaries (NFS protocol)")
  ContainerQueue(kafka, "Kafka", "Event streaming", "UploadCompleted, MetadataCommitted, Archived")
}

System_Ext(oidc, "OIDC Provider", "AuthN")

Rel(user, upload_api, "Upload PDFs, authenticated", "HTTPS/JWT")
Rel(user, metadata, "Search by SKU/supplier/docType/date", "HTTPS/JWT")

Rel(upload_api, oidc, "Validate tokens", "OIDC/JWT")
Rel(upload_api, redis, "SETNX dedup keys", "TCP")
Rel(upload_api, nfs, "Stream write PDFs", "NFS")
Rel(upload_api, kafka, "Publish UploadCompleted", "Kafka")

Rel(kafka, ocr, "Consume UploadCompleted", "Kafka")
Rel(ocr, nfs, "Read PDFs", "NFS")
Rel(ocr, metadata, "POST extracted JSON", "HTTP")

Rel(metadata, pg, "Upsert docs/versions; store metadata", "SQL/TCP")
Rel(metadata, kafka, "Publish MetadataCommitted (outbox)", "Kafka")
Rel(indexer, kafka, "Consume MetadataCommitted", "Kafka")
Rel(indexer, os, "Upsert documents", "HTTP/Bulk")

Rel(metadata, config, "Get retention policy", "HTTP")
Rel(metadata, retention, "Trigger evaluation", "HTTP")
Rel(retention, pg, "Find versions > N", "SQL")
Rel(retention, archive, "Archive requests", "HTTP")
Rel(archive, nfs, "Move binaries to archive namespace", "NFS")
Rel(archive, pg, "Mark versions archived; recompute latest", "SQL")
Rel(archive, kafka, "Publish Archived", "Kafka")

Rel(metadata, oidc, "Validate tokens for Search API", "OIDC/JWT")

@enduml